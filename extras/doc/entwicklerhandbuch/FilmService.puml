@startuml Anwendungskern

interface Promise<T>

package @nestjs/common {
  class "function Injectable(): ClassDecorator" as Injectable
  hide Injectable circle
}

package mongoose {
  class FilterQuery
  hide FilterQuery circle
}


package film {
  package entity {
    class Film
    class FilmDocument

  }

  package service #DDDDDD {
    class FilmInvalid
    class TitelExists
    class VersionInvalid
    class VersionOutdated

    FilmService .up.> Promise
    FilmService ..> Film
    FilmService ..> FilmDocument
    FilmService .left.> FilmValidationService
    FilmService ..> FilmInvalid
    FilmService ..> TitelExists
    FilmService ..> VersionInvalid
    FilmService ..> VersionOutdated
    FilmService .up.> FilterQuery
    FilmService .up.> Injectable

    class FilmService << control >> <<@Injectable()>> {
      + async findById(id: string): Promise<FilmDocument | undefined>
      + async find(query?: FilterQuery<FilmDocument>): Promise<FilmDocument[]>
      + async create(film: Film): Promise<string|FilmInvalid|TitelExists>
      + async update(film: Film, id: string, version: string): Promise<number|FilmInvalid|TitelExists|VersionInvalid|VersionOutdated>
      + async delete(id: string): Promise<boolean>
    }

    VersionOutdated -[hidden]-> FilmDocument
  }
}

hide empty members

footer (c) JÃ¼rgen Zimmermann

@enduml
