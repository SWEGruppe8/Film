@startuml Anwendungskern

interface Promise<T>

package @nestjs/common {
  class "function Injectable(): ClassDecorator" as Injectable
  hide Injectable circle
}

package mongoose {
  class FilterQuery
  hide FilterQuery circle
}

package mail {
  class MailService
}

package buch {
  package entity {
    class Buch
    class BuchDocument

  }

  package service #DDDDDD {
    class BuchInvalid
    class TitelExists
    class IsbnExists
    class VersionInvalid
    class VersionOutdated

    BuchService .up.> Promise
    BuchService ..> Buch
    BuchService ..> BuchDocument
    BuchService .left.> BuchValidationService
    BuchService ..> BuchInvalid
    BuchService ..> TitelExists
    BuchService ..> IsbnExists
    BuchService ..> VersionInvalid
    BuchService ..> VersionOutdated
    BuchService .right.> MailService
    BuchService .up.> FilterQuery
    BuchService .up.> Injectable

    class BuchService << control >> <<@Injectable()>> {
      + async findById(id: string): Promise<BuchDocument | undefined>
      + async find(query?: FilterQuery<BuchDocument>): Promise<BuchDocument[]>
      + async create(buch: Buch): Promise<string|BuchInvalid|TitelExists|IsbnExists>
      + async update(buch: Buch, id: string, version: string): Promise<number|BuchInvalid|TitelExists|IsbnExists|VersionInvalid|VersionOutdated>
      + async delete(id: string): Promise<boolean>
    }

    VersionOutdated -[hidden]-> BuchDocument
  }
}

hide empty members

footer (c) JÃ¼rgen Zimmermann

@enduml
